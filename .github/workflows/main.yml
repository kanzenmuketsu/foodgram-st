name: Itog CI|CD

on:
  push:
    branches:
      - main
  
jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install ruff==0.8.0
        pip install -r ./itog/requirements.txt
    - name: Lint with ruff and tests
      env:
        POSTGRES_USER: django_user
        POSTGRES_PASSWORD: django_password
        POSTGRES_DB: django_db
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        python -m ruff check itog/
        cd itog/
        python manage.py test
  build-and-push-to-dockerhub:
    name: Push docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to DockerHub
      uses: docker/build-push-action@v5
      with:
        context: ./itog_backend/
        push: true
        tags: kanzenmuketsu/itog_back:latest
  build-and-push-to-dockerhub-front:
    name: Push frontend to DockerHub
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
    - name: Check out
      uses: actions/checkout@v4
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push to Docker
      uses: docker/build-push-action@v5
      with:
        context: './frontend/'
        push: true
        tags: kanzenmuketsu/itog_frontend:latest
  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./gateway/
          push: true
          tags: kanzenmuketsu/itog_gateway:latest
  send_message:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-to-dockerhub
      - build-and-push-to-dockerhub-front
      - build_gateway_and_push_to_docker_hub
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Образы успешно загружены
